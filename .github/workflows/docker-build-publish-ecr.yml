name: Build and Publish Docker Images Demo

on:
    push:
        branches:
            - main

concurrency:
    group: ${{ github.ref }}-${{ github.workflow }}
    cancel-in-progress: true

jobs:
    gauzy-api:
        runs-on: buildjet-8vcpu-ubuntu-2204
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Build
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./.deploy/api/Dockerfile
                  load: true
                  platforms: linux/amd64
                  tags: |
                      <ECR_REGISTRY>/<ECR_REPOSITORY>:latest
                  cache-from: type=registry,ref=everco/gauzy-api-demo:latest
                  cache-to: type=inline

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: <AWS_REGION>

            - name: Login to Amazon ECR
              run: aws ecr get-login-password --region <AWS_REGION> | docker login --username AWS --password-stdin <ECR_REGISTRY>

            - name: Tag Docker Image for ECR
              run: docker tag <ECR_REGISTRY>/<ECR_REPOSITORY>:latest <ECR_REGISTRY>/<ECR_REPOSITORY>:latest

            - name: Push Docker Image to ECR
              run: docker push <ECR_REGISTRY>/<ECR_REPOSITORY>:latest

    gauzy-webapp:
        runs-on: buildjet-8vcpu-ubuntu-2204
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./.deploy/webapp/Dockerfile
                  load: true
                  tags: |
                      <ECR_REGISTRY>/<ECR_REPOSITORY>:latest
                  cache-from: type=registry,ref=everco/gauzy-webapp-demo:latest
                  cache-to: type=inline

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: <AWS_REGION>

            - name: Login to Amazon ECR
              run: aws ecr get-login-password --region <AWS_REGION> | docker login --username AWS --password-stdin <ECR_REGISTRY>

            - name: Tag Docker Image for ECR
              run: docker tag <ECR_REGISTRY>/<ECR_REPOSITORY>:latest <ECR_REGISTRY>/<ECR_REPOSITORY>:latest

            - name: Push Docker Image to ECR
              run: docker push <ECR_REGISTRY>/<ECR_REPOSITORY>:latest
